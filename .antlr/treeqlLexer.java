// Generated from d:\Tez\2019-2020\Chrome Extension\thesis-work\languageformalism\TreeQL.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TreeQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, NUMBER=2, BOOLEAN_LITERAL=3, STRING_LITERAL=4, NUMERIC_LITERAL=5, 
		TRUE=6, FALSE=7, LPAREN=8, RPAREN=9, LBRACE=10, RBRACE=11, LBRACK=12, 
		RBRACK=13, SEMI=14, COMMA=15, DOT=16, AS=17, BOOLEAN=18, BYTE=19, CHAR=20, 
		DOUBLE=21, CONFORMIFEQUAL=22, DERIVEALWAYS=23, DERIVEIFNOTEQUAL=24, TERMINATEIFNOTEQUAL=25, 
		TERMINATE=26, OVERRIDE=27, EVALUATE=28, EXPLODE=29, DROP=30, FLOAT=31, 
		INT=32, JOIN=33, LONG=34, MERGE=35, ON=36, RECOGNIZE=37, SHORT=38, STRING=39, 
		PATH=40, TREE=41, UNION=42, SELECT=43, FROM=44, WHERE=45, ASSIGN=46, GT=47, 
		LT=48, BANG=49, TILDE=50, QUESTION=51, COLON=52, EQUAL=53, LE=54, GE=55, 
		NOTEQUAL=56, AND=57, OR=58, INC=59, DEC=60, ADD=61, SUB=62, DIV=63, MOD=64, 
		STAR=65, VAR_NAME=66, CHARACTER=67, ESCAPE_CHARACTER=68, WS=69, COMMENT=70;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "NUMBER", "INTEGER", "EXP", "BOOLEAN_LITERAL", "STRING_LITERAL", 
		"NUMERIC_LITERAL", "TRUE", "FALSE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
		"LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "AS", "BOOLEAN", "BYTE", "CHAR", 
		"DOUBLE", "CONFORMIFEQUAL", "DERIVEALWAYS", "DERIVEIFNOTEQUAL", "TERMINATEIFNOTEQUAL", 
		"TERMINATE", "OVERRIDE", "EVALUATE", "EXPLODE", "DROP", "FLOAT", "INT", 
		"JOIN", "LONG", "MERGE", "ON", "RECOGNIZE", "SHORT", "STRING", "PATH", 
		"TREE", "UNION", "SELECT", "FROM", "WHERE", "ASSIGN", "GT", "LT", "BANG", 
		"TILDE", "QUESTION", "COLON", "EQUAL", "LE", "GE", "NOTEQUAL", "AND", 
		"OR", "INC", "DEC", "ADD", "SUB", "DIV", "MOD", "STAR", "DIGIT", "E", 
		"EscapeSequence", "HexDigit", "VAR_NAME", "CHARACTER", "ESCAPE_CHARACTER", 
		"WS", "COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'null'", null, null, null, null, "'true'", "'false'", "'('", "')'", 
		"'{'", "'}'", "'['", "']'", "';'", "','", "'.'", "'as'", "'boolean'", 
		"'byte'", "'char'", "'double'", "'conform if equal'", "'derive always'", 
		"'derive if equal'", "'terminate if not equal'", "'terminate'", "'override'", 
		"'evaluate'", "'explode'", "'drop'", "'float'", "'int'", "'join'", "'long'", 
		"'merge'", "'on'", "'recognize'", "'short'", "'String'", "'Path'", "'Tree'", 
		"'union'", "'select'", "'from'", "'where'", "'='", "'>'", "'<'", "'!'", 
		"'~'", "'?'", "':'", "'=='", "'<='", "'>='", "'!='", "'&&'", "'||'", "'++'", 
		"'--'", "'+'", "'-'", "'/'", "'%'", "'*'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, "NUMBER", "BOOLEAN_LITERAL", "STRING_LITERAL", "NUMERIC_LITERAL", 
		"TRUE", "FALSE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
		"SEMI", "COMMA", "DOT", "AS", "BOOLEAN", "BYTE", "CHAR", "DOUBLE", "CONFORMIFEQUAL", 
		"DERIVEALWAYS", "DERIVEIFNOTEQUAL", "TERMINATEIFNOTEQUAL", "TERMINATE", 
		"OVERRIDE", "EVALUATE", "EXPLODE", "DROP", "FLOAT", "INT", "JOIN", "LONG", 
		"MERGE", "ON", "RECOGNIZE", "SHORT", "STRING", "PATH", "TREE", "UNION", 
		"SELECT", "FROM", "WHERE", "ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", 
		"COLON", "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", "ADD", 
		"SUB", "DIV", "MOD", "STAR", "VAR_NAME", "CHARACTER", "ESCAPE_CHARACTER", 
		"WS", "COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public TreeQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TreeQL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2H\u0263\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\3\2\3\2\3\2\3\2\3\2\3\3\5\3\u00a2\n\3\3\3"+
		"\3\3\3\3\6\3\u00a7\n\3\r\3\16\3\u00a8\5\3\u00ab\n\3\3\3\5\3\u00ae\n\3"+
		"\3\4\3\4\3\4\7\4\u00b3\n\4\f\4\16\4\u00b6\13\4\5\4\u00b8\n\4\3\5\3\5\5"+
		"\5\u00bc\n\5\3\5\3\5\3\6\3\6\5\6\u00c2\n\6\3\7\3\7\3\7\7\7\u00c7\n\7\f"+
		"\7\16\7\u00ca\13\7\3\7\3\7\3\b\6\b\u00cf\n\b\r\b\16\b\u00d0\3\b\3\b\7"+
		"\b\u00d5\n\b\f\b\16\b\u00d8\13\b\5\b\u00da\n\b\3\b\3\b\5\b\u00de\n\b\3"+
		"\b\6\b\u00e1\n\b\r\b\16\b\u00e2\5\b\u00e5\n\b\3\b\3\b\6\b\u00e9\n\b\r"+
		"\b\16\b\u00ea\3\b\3\b\5\b\u00ef\n\b\3\b\6\b\u00f2\n\b\r\b\16\b\u00f3\5"+
		"\b\u00f6\n\b\5\b\u00f8\n\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n"+
		"\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22"+
		"\3\22\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3"+
		"\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3"+
		"*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\3"+
		".\3.\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\62"+
		"\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\38\39\3"+
		"9\39\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3>\3?\3?\3?\3@\3@\3A\3"+
		"A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3G\3G\5G\u0230\nG\3G\5G\u0233\n"+
		"G\3G\3G\3G\6G\u0238\nG\rG\16G\u0239\3G\3G\3G\3G\3G\5G\u0241\nG\3H\3H\3"+
		"I\3I\7I\u0247\nI\fI\16I\u024a\13I\3J\3J\3J\3J\3K\3K\3L\6L\u0253\nL\rL"+
		"\16L\u0254\3L\3L\3M\3M\3M\3M\7M\u025d\nM\fM\16M\u0260\13M\3M\3M\2\2N\3"+
		"\3\5\4\7\2\t\2\13\5\r\6\17\7\21\b\23\t\25\n\27\13\31\f\33\r\35\16\37\17"+
		"!\20#\21%\22\'\23)\24+\25-\26/\27\61\30\63\31\65\32\67\339\34;\35=\36"+
		"?\37A C!E\"G#I$K%M&O\'Q(S)U*W+Y,[-]._/a\60c\61e\62g\63i\64k\65m\66o\67"+
		"q8s9u:w;y<{=}>\177?\u0081@\u0083A\u0085B\u0087C\u0089\2\u008b\2\u008d"+
		"\2\u008f\2\u0091D\u0093E\u0095F\u0097G\u0099H\3\2\20\3\2\62;\3\2\63;\4"+
		"\2GGgg\4\2--//\6\2\f\f\17\17$$^^\n\2$$))^^ddhhppttvv\3\2\62\65\3\2\62"+
		"9\5\2\62;CHch\5\2C\\aac|\6\2\62;C\\aac|\4\2))^^\5\2\13\f\16\17\"\"\4\2"+
		"\f\f\17\17\2\u0279\2\3\3\2\2\2\2\5\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2"+
		"\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o"+
		"\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2"+
		"\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2"+
		"\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\3\u009b\3\2\2\2\5\u00a1\3\2\2\2\7\u00b7"+
		"\3\2\2\2\t\u00b9\3\2\2\2\13\u00c1\3\2\2\2\r\u00c3\3\2\2\2\17\u00f7\3\2"+
		"\2\2\21\u00f9\3\2\2\2\23\u00fe\3\2\2\2\25\u0104\3\2\2\2\27\u0106\3\2\2"+
		"\2\31\u0108\3\2\2\2\33\u010a\3\2\2\2\35\u010c\3\2\2\2\37\u010e\3\2\2\2"+
		"!\u0110\3\2\2\2#\u0112\3\2\2\2%\u0114\3\2\2\2\'\u0116\3\2\2\2)\u0119\3"+
		"\2\2\2+\u0121\3\2\2\2-\u0126\3\2\2\2/\u012b\3\2\2\2\61\u0132\3\2\2\2\63"+
		"\u0143\3\2\2\2\65\u0151\3\2\2\2\67\u0161\3\2\2\29\u0178\3\2\2\2;\u0182"+
		"\3\2\2\2=\u018b\3\2\2\2?\u0194\3\2\2\2A\u019c\3\2\2\2C\u01a1\3\2\2\2E"+
		"\u01a7\3\2\2\2G\u01ab\3\2\2\2I\u01b0\3\2\2\2K\u01b5\3\2\2\2M\u01bb\3\2"+
		"\2\2O\u01be\3\2\2\2Q\u01c8\3\2\2\2S\u01ce\3\2\2\2U\u01d5\3\2\2\2W\u01da"+
		"\3\2\2\2Y\u01df\3\2\2\2[\u01e5\3\2\2\2]\u01ec\3\2\2\2_\u01f1\3\2\2\2a"+
		"\u01f7\3\2\2\2c\u01f9\3\2\2\2e\u01fb\3\2\2\2g\u01fd\3\2\2\2i\u01ff\3\2"+
		"\2\2k\u0201\3\2\2\2m\u0203\3\2\2\2o\u0205\3\2\2\2q\u0208\3\2\2\2s\u020b"+
		"\3\2\2\2u\u020e\3\2\2\2w\u0211\3\2\2\2y\u0214\3\2\2\2{\u0217\3\2\2\2}"+
		"\u021a\3\2\2\2\177\u021d\3\2\2\2\u0081\u021f\3\2\2\2\u0083\u0221\3\2\2"+
		"\2\u0085\u0223\3\2\2\2\u0087\u0225\3\2\2\2\u0089\u0227\3\2\2\2\u008b\u0229"+
		"\3\2\2\2\u008d\u0240\3\2\2\2\u008f\u0242\3\2\2\2\u0091\u0244\3\2\2\2\u0093"+
		"\u024b\3\2\2\2\u0095\u024f\3\2\2\2\u0097\u0252\3\2\2\2\u0099\u0258\3\2"+
		"\2\2\u009b\u009c\7p\2\2\u009c\u009d\7w\2\2\u009d\u009e\7n\2\2\u009e\u009f"+
		"\7n\2\2\u009f\4\3\2\2\2\u00a0\u00a2\7/\2\2\u00a1\u00a0\3\2\2\2\u00a1\u00a2"+
		"\3\2\2\2\u00a2\u00a3\3\2\2\2\u00a3\u00aa\5\7\4\2\u00a4\u00a6\7\60\2\2"+
		"\u00a5\u00a7\t\2\2\2\u00a6\u00a5\3\2\2\2\u00a7\u00a8\3\2\2\2\u00a8\u00a6"+
		"\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00ab\3\2\2\2\u00aa\u00a4\3\2\2\2\u00aa"+
		"\u00ab\3\2\2\2\u00ab\u00ad\3\2\2\2\u00ac\u00ae\5\t\5\2\u00ad\u00ac\3\2"+
		"\2\2\u00ad\u00ae\3\2\2\2\u00ae\6\3\2\2\2\u00af\u00b8\7\62\2\2\u00b0\u00b4"+
		"\t\3\2\2\u00b1\u00b3\t\2\2\2\u00b2\u00b1\3\2\2\2\u00b3\u00b6\3\2\2\2\u00b4"+
		"\u00b2\3\2\2\2\u00b4\u00b5\3\2\2\2\u00b5\u00b8\3\2\2\2\u00b6\u00b4\3\2"+
		"\2\2\u00b7\u00af\3\2\2\2\u00b7\u00b0\3\2\2\2\u00b8\b\3\2\2\2\u00b9\u00bb"+
		"\t\4\2\2\u00ba\u00bc\t\5\2\2\u00bb\u00ba\3\2\2\2\u00bb\u00bc\3\2\2\2\u00bc"+
		"\u00bd\3\2\2\2\u00bd\u00be\5E#\2\u00be\n\3\2\2\2\u00bf\u00c2\5\21\t\2"+
		"\u00c0\u00c2\5\23\n\2\u00c1\u00bf\3\2\2\2\u00c1\u00c0\3\2\2\2\u00c2\f"+
		"\3\2\2\2\u00c3\u00c8\7$\2\2\u00c4\u00c7\n\6\2\2\u00c5\u00c7\5\u008dG\2"+
		"\u00c6\u00c4\3\2\2\2\u00c6\u00c5\3\2\2\2\u00c7\u00ca\3\2\2\2\u00c8\u00c6"+
		"\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c9\u00cb\3\2\2\2\u00ca\u00c8\3\2\2\2\u00cb"+
		"\u00cc\7$\2\2\u00cc\16\3\2\2\2\u00cd\u00cf\5\u0089E\2\u00ce\u00cd\3\2"+
		"\2\2\u00cf\u00d0\3\2\2\2\u00d0\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2\u00d1"+
		"\u00d9\3\2\2\2\u00d2\u00d6\7\60\2\2\u00d3\u00d5\5\u0089E\2\u00d4\u00d3"+
		"\3\2\2\2\u00d5\u00d8\3\2\2\2\u00d6\u00d4\3\2\2\2\u00d6\u00d7\3\2\2\2\u00d7"+
		"\u00da\3\2\2\2\u00d8\u00d6\3\2\2\2\u00d9\u00d2\3\2\2\2\u00d9\u00da\3\2"+
		"\2\2\u00da\u00e4\3\2\2\2\u00db\u00dd\5\u008bF\2\u00dc\u00de\t\5\2\2\u00dd"+
		"\u00dc\3\2\2\2\u00dd\u00de\3\2\2\2\u00de\u00e0\3\2\2\2\u00df\u00e1\5\u0089"+
		"E\2\u00e0\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e2"+
		"\u00e3\3\2\2\2\u00e3\u00e5\3\2\2\2\u00e4\u00db\3\2\2\2\u00e4\u00e5\3\2"+
		"\2\2\u00e5\u00f8\3\2\2\2\u00e6\u00e8\7\60\2\2\u00e7\u00e9\5\u0089E\2\u00e8"+
		"\u00e7\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2"+
		"\2\2\u00eb\u00f5\3\2\2\2\u00ec\u00ee\5\u008bF\2\u00ed\u00ef\t\5\2\2\u00ee"+
		"\u00ed\3\2\2\2\u00ee\u00ef\3\2\2\2\u00ef\u00f1\3\2\2\2\u00f0\u00f2\5\u0089"+
		"E\2\u00f1\u00f0\3\2\2\2\u00f2\u00f3\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f3"+
		"\u00f4\3\2\2\2\u00f4\u00f6\3\2\2\2\u00f5\u00ec\3\2\2\2\u00f5\u00f6\3\2"+
		"\2\2\u00f6\u00f8\3\2\2\2\u00f7\u00ce\3\2\2\2\u00f7\u00e6\3\2\2\2\u00f8"+
		"\20\3\2\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7t\2\2\u00fb\u00fc\7w\2\2\u00fc"+
		"\u00fd\7g\2\2\u00fd\22\3\2\2\2\u00fe\u00ff\7h\2\2\u00ff\u0100\7c\2\2\u0100"+
		"\u0101\7n\2\2\u0101\u0102\7u\2\2\u0102\u0103\7g\2\2\u0103\24\3\2\2\2\u0104"+
		"\u0105\7*\2\2\u0105\26\3\2\2\2\u0106\u0107\7+\2\2\u0107\30\3\2\2\2\u0108"+
		"\u0109\7}\2\2\u0109\32\3\2\2\2\u010a\u010b\7\177\2\2\u010b\34\3\2\2\2"+
		"\u010c\u010d\7]\2\2\u010d\36\3\2\2\2\u010e\u010f\7_\2\2\u010f \3\2\2\2"+
		"\u0110\u0111\7=\2\2\u0111\"\3\2\2\2\u0112\u0113\7.\2\2\u0113$\3\2\2\2"+
		"\u0114\u0115\7\60\2\2\u0115&\3\2\2\2\u0116\u0117\7c\2\2\u0117\u0118\7"+
		"u\2\2\u0118(\3\2\2\2\u0119\u011a\7d\2\2\u011a\u011b\7q\2\2\u011b\u011c"+
		"\7q\2\2\u011c\u011d\7n\2\2\u011d\u011e\7g\2\2\u011e\u011f\7c\2\2\u011f"+
		"\u0120\7p\2\2\u0120*\3\2\2\2\u0121\u0122\7d\2\2\u0122\u0123\7{\2\2\u0123"+
		"\u0124\7v\2\2\u0124\u0125\7g\2\2\u0125,\3\2\2\2\u0126\u0127\7e\2\2\u0127"+
		"\u0128\7j\2\2\u0128\u0129\7c\2\2\u0129\u012a\7t\2\2\u012a.\3\2\2\2\u012b"+
		"\u012c\7f\2\2\u012c\u012d\7q\2\2\u012d\u012e\7w\2\2\u012e\u012f\7d\2\2"+
		"\u012f\u0130\7n\2\2\u0130\u0131\7g\2\2\u0131\60\3\2\2\2\u0132\u0133\7"+
		"e\2\2\u0133\u0134\7q\2\2\u0134\u0135\7p\2\2\u0135\u0136\7h\2\2\u0136\u0137"+
		"\7q\2\2\u0137\u0138\7t\2\2\u0138\u0139\7o\2\2\u0139\u013a\7\"\2\2\u013a"+
		"\u013b\7k\2\2\u013b\u013c\7h\2\2\u013c\u013d\7\"\2\2\u013d\u013e\7g\2"+
		"\2\u013e\u013f\7s\2\2\u013f\u0140\7w\2\2\u0140\u0141\7c\2\2\u0141\u0142"+
		"\7n\2\2\u0142\62\3\2\2\2\u0143\u0144\7f\2\2\u0144\u0145\7g\2\2\u0145\u0146"+
		"\7t\2\2\u0146\u0147\7k\2\2\u0147\u0148\7x\2\2\u0148\u0149\7g\2\2\u0149"+
		"\u014a\7\"\2\2\u014a\u014b\7c\2\2\u014b\u014c\7n\2\2\u014c\u014d\7y\2"+
		"\2\u014d\u014e\7c\2\2\u014e\u014f\7{\2\2\u014f\u0150\7u\2\2\u0150\64\3"+
		"\2\2\2\u0151\u0152\7f\2\2\u0152\u0153\7g\2\2\u0153\u0154\7t\2\2\u0154"+
		"\u0155\7k\2\2\u0155\u0156\7x\2\2\u0156\u0157\7g\2\2\u0157\u0158\7\"\2"+
		"\2\u0158\u0159\7k\2\2\u0159\u015a\7h\2\2\u015a\u015b\7\"\2\2\u015b\u015c"+
		"\7g\2\2\u015c\u015d\7s\2\2\u015d\u015e\7w\2\2\u015e\u015f\7c\2\2\u015f"+
		"\u0160\7n\2\2\u0160\66\3\2\2\2\u0161\u0162\7v\2\2\u0162\u0163\7g\2\2\u0163"+
		"\u0164\7t\2\2\u0164\u0165\7o\2\2\u0165\u0166\7k\2\2\u0166\u0167\7p\2\2"+
		"\u0167\u0168\7c\2\2\u0168\u0169\7v\2\2\u0169\u016a\7g\2\2\u016a\u016b"+
		"\7\"\2\2\u016b\u016c\7k\2\2\u016c\u016d\7h\2\2\u016d\u016e\7\"\2\2\u016e"+
		"\u016f\7p\2\2\u016f\u0170\7q\2\2\u0170\u0171\7v\2\2\u0171\u0172\7\"\2"+
		"\2\u0172\u0173\7g\2\2\u0173\u0174\7s\2\2\u0174\u0175\7w\2\2\u0175\u0176"+
		"\7c\2\2\u0176\u0177\7n\2\2\u01778\3\2\2\2\u0178\u0179\7v\2\2\u0179\u017a"+
		"\7g\2\2\u017a\u017b\7t\2\2\u017b\u017c\7o\2\2\u017c\u017d\7k\2\2\u017d"+
		"\u017e\7p\2\2\u017e\u017f\7c\2\2\u017f\u0180\7v\2\2\u0180\u0181\7g\2\2"+
		"\u0181:\3\2\2\2\u0182\u0183\7q\2\2\u0183\u0184\7x\2\2\u0184\u0185\7g\2"+
		"\2\u0185\u0186\7t\2\2\u0186\u0187\7t\2\2\u0187\u0188\7k\2\2\u0188\u0189"+
		"\7f\2\2\u0189\u018a\7g\2\2\u018a<\3\2\2\2\u018b\u018c\7g\2\2\u018c\u018d"+
		"\7x\2\2\u018d\u018e\7c\2\2\u018e\u018f\7n\2\2\u018f\u0190\7w\2\2\u0190"+
		"\u0191\7c\2\2\u0191\u0192\7v\2\2\u0192\u0193\7g\2\2\u0193>\3\2\2\2\u0194"+
		"\u0195\7g\2\2\u0195\u0196\7z\2\2\u0196\u0197\7r\2\2\u0197\u0198\7n\2\2"+
		"\u0198\u0199\7q\2\2\u0199\u019a\7f\2\2\u019a\u019b\7g\2\2\u019b@\3\2\2"+
		"\2\u019c\u019d\7f\2\2\u019d\u019e\7t\2\2\u019e\u019f\7q\2\2\u019f\u01a0"+
		"\7r\2\2\u01a0B\3\2\2\2\u01a1\u01a2\7h\2\2\u01a2\u01a3\7n\2\2\u01a3\u01a4"+
		"\7q\2\2\u01a4\u01a5\7c\2\2\u01a5\u01a6\7v\2\2\u01a6D\3\2\2\2\u01a7\u01a8"+
		"\7k\2\2\u01a8\u01a9\7p\2\2\u01a9\u01aa\7v\2\2\u01aaF\3\2\2\2\u01ab\u01ac"+
		"\7l\2\2\u01ac\u01ad\7q\2\2\u01ad\u01ae\7k\2\2\u01ae\u01af\7p\2\2\u01af"+
		"H\3\2\2\2\u01b0\u01b1\7n\2\2\u01b1\u01b2\7q\2\2\u01b2\u01b3\7p\2\2\u01b3"+
		"\u01b4\7i\2\2\u01b4J\3\2\2\2\u01b5\u01b6\7o\2\2\u01b6\u01b7\7g\2\2\u01b7"+
		"\u01b8\7t\2\2\u01b8\u01b9\7i\2\2\u01b9\u01ba\7g\2\2\u01baL\3\2\2\2\u01bb"+
		"\u01bc\7q\2\2\u01bc\u01bd\7p\2\2\u01bdN\3\2\2\2\u01be\u01bf\7t\2\2\u01bf"+
		"\u01c0\7g\2\2\u01c0\u01c1\7e\2\2\u01c1\u01c2\7q\2\2\u01c2\u01c3\7i\2\2"+
		"\u01c3\u01c4\7p\2\2\u01c4\u01c5\7k\2\2\u01c5\u01c6\7|\2\2\u01c6\u01c7"+
		"\7g\2\2\u01c7P\3\2\2\2\u01c8\u01c9\7u\2\2\u01c9\u01ca\7j\2\2\u01ca\u01cb"+
		"\7q\2\2\u01cb\u01cc\7t\2\2\u01cc\u01cd\7v\2\2\u01cdR\3\2\2\2\u01ce\u01cf"+
		"\7U\2\2\u01cf\u01d0\7v\2\2\u01d0\u01d1\7t\2\2\u01d1\u01d2\7k\2\2\u01d2"+
		"\u01d3\7p\2\2\u01d3\u01d4\7i\2\2\u01d4T\3\2\2\2\u01d5\u01d6\7R\2\2\u01d6"+
		"\u01d7\7c\2\2\u01d7\u01d8\7v\2\2\u01d8\u01d9\7j\2\2\u01d9V\3\2\2\2\u01da"+
		"\u01db\7V\2\2\u01db\u01dc\7t\2\2\u01dc\u01dd\7g\2\2\u01dd\u01de\7g\2\2"+
		"\u01deX\3\2\2\2\u01df\u01e0\7w\2\2\u01e0\u01e1\7p\2\2\u01e1\u01e2\7k\2"+
		"\2\u01e2\u01e3\7q\2\2\u01e3\u01e4\7p\2\2\u01e4Z\3\2\2\2\u01e5\u01e6\7"+
		"u\2\2\u01e6\u01e7\7g\2\2\u01e7\u01e8\7n\2\2\u01e8\u01e9\7g\2\2\u01e9\u01ea"+
		"\7e\2\2\u01ea\u01eb\7v\2\2\u01eb\\\3\2\2\2\u01ec\u01ed\7h\2\2\u01ed\u01ee"+
		"\7t\2\2\u01ee\u01ef\7q\2\2\u01ef\u01f0\7o\2\2\u01f0^\3\2\2\2\u01f1\u01f2"+
		"\7y\2\2\u01f2\u01f3\7j\2\2\u01f3\u01f4\7g\2\2\u01f4\u01f5\7t\2\2\u01f5"+
		"\u01f6\7g\2\2\u01f6`\3\2\2\2\u01f7\u01f8\7?\2\2\u01f8b\3\2\2\2\u01f9\u01fa"+
		"\7@\2\2\u01fad\3\2\2\2\u01fb\u01fc\7>\2\2\u01fcf\3\2\2\2\u01fd\u01fe\7"+
		"#\2\2\u01feh\3\2\2\2\u01ff\u0200\7\u0080\2\2\u0200j\3\2\2\2\u0201\u0202"+
		"\7A\2\2\u0202l\3\2\2\2\u0203\u0204\7<\2\2\u0204n\3\2\2\2\u0205\u0206\7"+
		"?\2\2\u0206\u0207\7?\2\2\u0207p\3\2\2\2\u0208\u0209\7>\2\2\u0209\u020a"+
		"\7?\2\2\u020ar\3\2\2\2\u020b\u020c\7@\2\2\u020c\u020d\7?\2\2\u020dt\3"+
		"\2\2\2\u020e\u020f\7#\2\2\u020f\u0210\7?\2\2\u0210v\3\2\2\2\u0211\u0212"+
		"\7(\2\2\u0212\u0213\7(\2\2\u0213x\3\2\2\2\u0214\u0215\7~\2\2\u0215\u0216"+
		"\7~\2\2\u0216z\3\2\2\2\u0217\u0218\7-\2\2\u0218\u0219\7-\2\2\u0219|\3"+
		"\2\2\2\u021a\u021b\7/\2\2\u021b\u021c\7/\2\2\u021c~\3\2\2\2\u021d\u021e"+
		"\7-\2\2\u021e\u0080\3\2\2\2\u021f\u0220\7/\2\2\u0220\u0082\3\2\2\2\u0221"+
		"\u0222\7\61\2\2\u0222\u0084\3\2\2\2\u0223\u0224\7\'\2\2\u0224\u0086\3"+
		"\2\2\2\u0225\u0226\7,\2\2\u0226\u0088\3\2\2\2\u0227\u0228\4\62;\2\u0228"+
		"\u008a\3\2\2\2\u0229\u022a\t\4\2\2\u022a\u008c\3\2\2\2\u022b\u022c\7^"+
		"\2\2\u022c\u0241\t\7\2\2\u022d\u0232\7^\2\2\u022e\u0230\t\b\2\2\u022f"+
		"\u022e\3\2\2\2\u022f\u0230\3\2\2\2\u0230\u0231\3\2\2\2\u0231\u0233\t\t"+
		"\2\2\u0232\u022f\3\2\2\2\u0232\u0233\3\2\2\2\u0233\u0234\3\2\2\2\u0234"+
		"\u0241\t\t\2\2\u0235\u0237\7^\2\2\u0236\u0238\7w\2\2\u0237\u0236\3\2\2"+
		"\2\u0238\u0239\3\2\2\2\u0239\u0237\3\2\2\2\u0239\u023a\3\2\2\2\u023a\u023b"+
		"\3\2\2\2\u023b\u023c\5\u008fH\2\u023c\u023d\5\u008fH\2\u023d\u023e\5\u008f"+
		"H\2\u023e\u023f\5\u008fH\2\u023f\u0241\3\2\2\2\u0240\u022b\3\2\2\2\u0240"+
		"\u022d\3\2\2\2\u0240\u0235\3\2\2\2\u0241\u008e\3\2\2\2\u0242\u0243\t\n"+
		"\2\2\u0243\u0090\3\2\2\2\u0244\u0248\t\13\2\2\u0245\u0247\t\f\2\2\u0246"+
		"\u0245\3\2\2\2\u0247\u024a\3\2\2\2\u0248\u0246\3\2\2\2\u0248\u0249\3\2"+
		"\2\2\u0249\u0092\3\2\2\2\u024a\u0248\3\2\2\2\u024b\u024c\7)\2\2\u024c"+
		"\u024d\n\r\2\2\u024d\u024e\7)\2\2\u024e\u0094\3\2\2\2\u024f\u0250\5\u0093"+
		"J\2\u0250\u0096\3\2\2\2\u0251\u0253\t\16\2\2\u0252\u0251\3\2\2\2\u0253"+
		"\u0254\3\2\2\2\u0254\u0252\3\2\2\2\u0254\u0255\3\2\2\2\u0255\u0256\3\2"+
		"\2\2\u0256\u0257\bL\2\2\u0257\u0098\3\2\2\2\u0258\u0259\7\61\2\2\u0259"+
		"\u025a\7\61\2\2\u025a\u025e\3\2\2\2\u025b\u025d\n\17\2\2\u025c\u025b\3"+
		"\2\2\2\u025d\u0260\3\2\2\2\u025e\u025c\3\2\2\2\u025e\u025f\3\2\2\2\u025f"+
		"\u0261\3\2\2\2\u0260\u025e\3\2\2\2\u0261\u0262\bM\2\2\u0262\u009a\3\2"+
		"\2\2\37\2\u00a1\u00a8\u00aa\u00ad\u00b4\u00b7\u00bb\u00c1\u00c6\u00c8"+
		"\u00d0\u00d6\u00d9\u00dd\u00e2\u00e4\u00ea\u00ee\u00f3\u00f5\u00f7\u022f"+
		"\u0232\u0239\u0240\u0248\u0254\u025e\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}